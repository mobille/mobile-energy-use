<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" initialize="init()" width="800">
		<mx:states>
				<mx:State name="ManualEntryState">
						<mx:AddChild relativeTo="{button1}" position="before">
								<mx:FormItem label="Resource" id="formitem2" x="429">
										<mx:ComboBox editable="true" id="resourceCombo" dataProvider="[light level, meter reading, temperature]"></mx:ComboBox>
								</mx:FormItem>
						</mx:AddChild>
						<mx:AddChild position="lastChild">
								<mx:TextInput id="valueText" x="516" bottom="0" width="100"/>
						</mx:AddChild>
						<mx:AddChild position="lastChild">
								<mx:Label text="Value" x="458" bottom="0"/>
						</mx:AddChild>
						<mx:AddChild position="lastChild">
								<mx:ComboBox id="unitsCombo" editable="true" dataProvider="[kW]" x="619" y="33"/>
						</mx:AddChild>
						<mx:SetEventHandler target="{button1}" name="click" handler="{recordManual()}"/>
						<mx:SetProperty target="{button1}" name="height" value="60"/>
				</mx:State>
				<mx:State name="SensorState">
						<mx:AddChild relativeTo="{button1}" position="before">
								<mx:DataGrid showHeaders="false" dataProvider="{_arduinoSensor.currentData}" height="50" width="348" x="348">
										<mx:columns>
												<mx:DataGridColumn dataField="resource"/>
												<mx:DataGridColumn dataField="value"/>
												<mx:DataGridColumn dataField="units"/>
										</mx:columns>
								</mx:DataGrid>
						</mx:AddChild>
						<mx:SetEventHandler target="{button1}" name="click" handler="{recordSensors()}"/>
				</mx:State>
		</mx:states>
		<mx:Button label="Record" x="701" y="2" height="48" width="97" id="button1"/>
	
	<mx:Script>
		<![CDATA[
			import flare.util.Maths;
			import mx.controls.Alert;
			import sqlite.SQLiteHandler;
			import sensing.Sensor;
			
			public const DEVICE_ID:int = 987654321; //TODO: Should actually be device independent
			
			[Bindable]
			protected var _date:Date = new Date();
			
			[Bindable ]
			protected var _gpsSensor:Sensor = new Sensor("127.0.0.1",5000);
			public function get gpsData():Object{
				var gpsData:Object;
				if(_gpsSensor.currentData){
					var gpsArray:Array = _gpsSensor.currentData.toString().split(" ");
					if(gpsArray.length == 3){
						gpsData = new Object();
						gpsData['latitude'] = gpsArray[0];
						gpsData['longitude'] = gpsArray[1];
						gpsData['altitude'] = gpsArray[2];
					}
				}
				return gpsData;
				
			}
			[Bindable]
			protected var _arduinoSensor:Sensor	= new Sensor("127.0.0.1",4000);
			public function get arduinoData():Object{ return _gpsSensor.currentData}
			
			protected var _sqlLiteHandler:SQLiteHandler = SQLiteHandler.instance;
			
			//FIXME:Need to generate a new session id each time a recording action is started
			protected var _currentSessionId:int = int(Math.random()*100000);
			
			
			protected function init():void{
				_gpsSensor.addEventListener(Sensor.DATA_CHANGED, 
					function(e:Event):void{
						gpsLabel.text = gpsData['latitude'] + " " + gpsData['longitude'];
					}); 
			}
			
			protected function recordManual():void{
				var t:Object = new Object();
				if(valueText.text.length >= 1){
					t['date'] = _date;
					var g:Object = gpsData;
					if(g){
						t['latitude'] = g['latitude'];
						t['longitude'] = g['longitude'];
						t['altitude'] = g['altitude'];
					}	
					t['sensorName'] = (resourceCombo.selectedItem.toString());
					t['deviceId'] = DEVICE_ID;
					t['sessionId'] = _currentSessionId;
					t['units'] = unitsCombo.selectedItem.toString();
					t['value'] = parseInt(valueText.text);  			
					_sqlLiteHandler.sendTuple(t);
				}
			}
			
			protected function recordSensors():void{
				//TODO:Implement and set up so tht record is called repeatedly when updated sensor values arrive.
				
				//debug
				if(_gpsSensor.currentData)	var gpsArray:Array = _gpsSensor.currentData.toString().split(" ");
				_sqlLiteHandler.getTuples((gpsArray && gpsArray.length == 3?gpsArray[0]:undefined),
					(gpsArray && gpsArray.length == 3?gpsArray[1]:undefined),new Date(2007,12,5),_date); 
			}
			
			
		]]>
	</mx:Script>
	<mx:RadioButton label="Sensors" groupName="sourceGroup" id="radiobutton2" value="SensorState" x="10"/>
	<mx:RadioButton label="Manual Entry" groupName="sourceGroup" id="radiobutton1" value="ManualEntryState" x="10" y="23"/>
	<mx:RadioButtonGroup id="sourceGroup" change="{currentState = sourceGroup.selectedValue as String}"/>
	<mx:Label text="{_date.toTimeString()}"  x="169" y="0"/>
	<mx:Label id="gpsLabel" text="{_gpsSensor.currentData?_gpsSensor.currentData:'No GPS Data Available'}" 
		click="{_gpsSensor.sendData(Math.random().toString())}" color="#DDDDDD" x="169" y="23"/>
	<mx:VRule x="154" y="5" width="1" height="40"/>
	
</mx:Canvas>
